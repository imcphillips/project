name: Build and push to ECR
on: push
jobs:
  build:
    name: Build and push to ECR
    runs-on: ubuntu-latest
    steps:

    # Checkout the code
    - name: Check out code
      uses: actions/checkout@v2

    # Get the short sha for tagging the image with  
    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 6
    
    # Set up your AWS credentials (needed secrets must exist in Github)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Login to AWS ECR 
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build the image, tag it, and push it to ECR
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        ECR_REPOSITORY=${GITHUB_REPOSITORY#*/}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/} -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.short-sha.outputs.sha }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.short-sha.outputs.sha }}

    # Do something in Kubernetes like a restart and a health check
    - name: Rollout deployment
      uses: kodermax/kubectl-aws-eks@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        args: rollout restart deployment/${GITHUB_REPOSITORY#*/}